* {
    box-sizing: border-box;
}

body, html {
    height: 100%;
}

body {
    margin: 0;
   
    
}
button {
    background-color: transparent;
    border: none;
}

h1,h2,h3,h4,h5,h6 {
    margin: 0;
}

/* layout -BEM */
.container { /*block */
display: flex; /* especifica si un elemento es tratado como block or inline element y el diseño usado por sus hijos, como flow layout*/
flex-direction: column; /*especifica cómo colocar los objetos flexibles en el contenedor flexible definiendo el eje principal y la dirección*/
align-items: center; /*establece el valor align-self sobre todos los descendientes directos de un grupo*/
justify-content: center; /*define cómo el navegador distribuye el espacio entre y alrededor de los items flex, a lo largo del eje principal de su contenedor*/
gap: 5px; /*Es el ancho de la canaleta que separa las líneas de la cuadrícula,en relación con la dimensión del elemento*/
}

.container__item--left { /*block__element--modificate*/
    align-self: start; /*indica la alineación de un elemento dentro del bloque que lo contiene*/
}

.container__item--rigth {/*block__element--modificate*/
    align-self: end;
}

header {
    background-color: blue;
    position: fixed;
    width: 100%;
    top: 0;
    height: 30px;
    box-shadow: 0 1px 5px 0 rgba(50, 0, 180, 0.5);
    display: flex;
    gap: 15px;
    /* El padre va a dirigir como se situa los hijos es lo más recomendado */
}

.header__menu {
    /* position: fixed and absolut implican que el component fija por si
     mismo su ubicación en el layout (lugar en el que se posiciona en la
     pantalla */
    position: fixed;
    top: 30px;
    height: 60px;
    display: flex;
    flex-direction:column;
    align-items: flex-start;
    background-color: inherit;
    justify-content: space-around;
}

.header__title {
    /* margin-left: 15px; */
    font-size: 25px;

}

.button-burguer {
    width: fit-content;
}

.hello {

}